apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentDefinition
metadata:
  name: {{ include "gbase.componentDefName" . }}
  labels:
    {{- include "gbase.labels" . | nindent 4 }}
spec:
  provider: kubeblocks.io
  description: gabse 8c 
  serviceKind: gbase
  serviceVersion: 5.0.0
  configs:
    - name: gbase-config
      templateRef: {{ include "gbase.cmConfigName" . }}
      namespace: {{ .Release.Namespace }}
      volumeName: gbase-config
      defaultMode: 0444
  scripts:
    - name: gbase-scripts
      templateRef: {{ include "gbase.cmScriptsName" . }}
      namespace: {{ .Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555 
  systemAccounts:
    - name: gbase
      initAccount: true
      passwordGenerationPolicy:
        length: 16
        numDigits: 8
        numSymbols: 0
        letterCase: MixedCases
    - name: kbadmin
      passwordGenerationPolicy: &defaultPasswordGenerationPolicy
        length: 16
        numDigits: 8
        numSymbols: 0
        letterCase: MixedCases
  vars:
    - name: GBASE_USER
      valueFrom:
        credentialVarRef:
          compDef: {{ include "gbase.componentDefName" . }}
          name: gbase
          optional: false
          username: Required
    - name: GBASE_PASSWORD
      valueFrom:
        credentialVarRef:
          compDef: {{ include "gbase.componentDefName" . }}
          name: root
          optional: false
          password: Required   
    - name: KBADMIN_USER
      valueFrom:
        credentialVarRef:
          compDef: {{ include "gbase.componentDefName" . }}
          name: kbadmin
          optional: false
          username: Required
    - name: KBADMIN_PASSWORD
      valueFrom:
        credentialVarRef:
          compDef: {{ include "gbase.componentDefName" . }}
          name: kbadmin
          optional: false
          password: Required   
  updateStrategy: Parallel
  podManagementPolicy: Parallel
  roles:
    - name: primary
      serviceable: true
      writable: true
    - name: secondary
      serviceable: false
      writable: false
  lifecycleActions:
    roleProbe:
      customHandler:
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        exec:
          command:
            - /bin/bash
            - -c
            - |
              topology_info=$(/kubeblocks/orchestrator-client -c topology -i $KB_CLUSTER_NAME) || true
              if [[ $topology_info == "" ]]; then
                echo -n "secondary"
                exit 0
              fi

              first_line=$(echo "$topology_info" | head -n 1)
              cleaned_line=$(echo "$first_line" | tr -d '[]')
              old_ifs="$IFS"
              IFS=',' read -ra status_array <<< "$cleaned_line"
              IFS="$old_ifs"
              status="${status_array[1]}"
              if  [ "$status" != "ok" ]; then
                exit 0
              fi

              address_port=$(echo "$first_line" | awk '{print $1}')
              master_from_orc="${address_port%:*}"
              last_digit=${KB_POD_NAME##*-}
              self_service_name=$(echo "${KB_CLUSTER_COMP_NAME}_${KB_COMP_NAME}_${last_digit}" | tr '_' '-' | tr '[:upper:]' '[:lower:]' )
              if [ "$master_from_orc" == "${self_service_name}" ]; then
                echo -n "primary"
              else
                echo -n "secondary"
              fi
    switchover:
      withCandidate:
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tags.major15.minor070 }}
        exec:
          command:
            - /bin/bash
            - -c
          args:
            - curl -s http://$(KB_REPLICATION_PRIMARY_POD_FQDN):8008/switchover -XPOST -d '{"leader":"$(KB_REPLICATION_PRIMARY_POD_NAME)","candidate":"$(KB_SWITCHOVER_CANDIDATE_NAME)"}'
      withoutCandidate:
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tags.major15.minor070 }}
        exec:
          command:
            - /bin/bash
            - -c
          args:
            - curl -s http://$(KB_REPLICATION_PRIMARY_POD_FQDN):8008/switchover -XPOST -d '{"leader":"$(KB_REPLICATION_PRIMARY_POD_NAME)"}'
    accountProvision:
      customHandler:
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tags.major15.minor070 }}
        exec:
          command:
            - psql
          args:
            - -h$(KB_ACCOUNT_ENDPOINT)
            - -c
            - $(KB_ACCOUNT_STATEMENT)
        env:
          - name: PGUSER
            value: $(POSTGRES_USER)
          - name: PGPASSWORD
            value: $(POSTGRES_PASSWORD)   

  runtime:
    containers:
      - name: gbase
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        command: ["/usr/sbin/init"]
        ports:
          - name: gbase-dataport
            containerPort: {{ .Values.gbaseConfigs.service.port }}
        lifecycle:
          postStart:
            exec:
              command: ["/scripts/start_cluster.sh"]
        securityContext:
          privileged: true
          runAsUser: 0
        env:
          - name : server_port
            value: 5432
        volumeMounts:
          - mountPath: /config
            name: gbase-config
          - mountPath: /data
            name: data
          - name: scripts
            mountPath: /scripts
          - name: ssh-key
            mountPath: /ssh-key
            readOnly: true
    volumes:
    - name: ssh-key
      secret:
        secretName: gbase-ssh-rsa-secret